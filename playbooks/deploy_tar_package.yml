- name: Set destination path
  set_fact:
    dest_path: >-
      {% if 'OFAC' in file %}/fskfilter/fsk/fffbin-{{ ofac_version }}{% elif 'FOF64' in file %}/fskfilter/fsk/{{ fof64_version }}{% else %}/tmp/unknown{% endif %}
        
- name: verify the dest path
  debug:
    msg: "dest_path is: '{{ dest_path }}'"

- name: verify the dest path
  debug:
    msg: "dest_path is: {{ dest_path }}"

- name: Ensure version directory exists
  file:
    path: "{{ dest_path }}"
    state: directory
    mode: '0755'

- name: List directories
  shell: ls -l {{ dest_path | dirname }}
  register: list_dirs

- debug:
    var: list_dirs.stdout_lines

- name: Ensude  temp dir exists
  file:
    path: "{{ tmpdir }}"
    state: directory
    mode: '0755'

- name: Download package from Nexus
  get_url:
    url: "{{ nexus_path }}{{ file }}"
    dest: "{{ tmpdir }}/{{ file }}"
    mode: '0644'
    force: yes
    url_username: "{{ nexus_username }}"
    url_password: "{{ nexus_password }}"
    validate_certs: false

- name: Extract the tar.gz package
  unarchive:
    src: "{{ tmpdir }}/{{ file }}"
    dest: "{{ dest_path }}"
    remote_src: yes

- name: verify if there is another tar file
  find:
    paths: "{{ dest_path }}"
    patterns: "*.tar"
    recurse: yes
  register: tar_file

- name: Extract inner tar file (if found)
  unarchive:
    src: "{{ item.path }}"
    dest: "{{ dest_path }}"
    remote_src: yes
  loop: "{{ tar_file.files }}"
  when: tar_file.matched > 0 

- name: Print deployment info
  debug:
    msg: "Deployed {{ file }} to {{ dest_path }}"

###---ofac version update---###

- name: Capture previous FFFBIN version (commented or not, excluding current)
  shell: >
    grep '^#\?export FFFBIN=\$FSK/FFFBIN-' /home/tomss/.bash_profile | 
    awk -F'-' '{print $2}' | 
    grep -v '{{ ofac_version | replace(".", "") }}' | 
    tail -n 1
  register: prev_version
  changed_when: false
  failed_when: false
  when: "'OFAC' in file"

- name: Set the prev_version
  set_fact:
    prev_fffbin_version: "{{ prev_version.stdout }}"
  when: "'OFAC' in file"

- name: Remove all old FFFBIN export lines
  lineinfile:
    path: /home/tomss/.bash_profile
    regexp: '^#?export FFFBIN=.*'
    state: absent
    backup: yes
    owner: tomss
    group: tomss
    mode: '0644'
  when: "'OFAC' in file"

- name: Comment out previous version lines
  lineinfile:
    path: /home/tomss/.bash_profile
    line: "#export FFFBIN=$FSK/FFFBIN-{{ prev_fffbin_version }}"
    insertafter: EOF
    state: present
    owner: tomss
    group: tomss
    mode: '0644'
  when: >
    'OFAC' in file
    and prev_fffbin_version is defined
    and prev_fffbin_version != (ofac_version | replace('.', ''))
    and prev_fffbin_version | length > 0

- name: Add FFFBIN export line with current version
  lineinfile:
    path: /home/tomss/.bash_profile
    line: "export FFFBIN=$GHK/FFFBIN-{{ ofac_version | replace('.', '') }}"
    insertafter: EOF
    state: present
    owner: tomss
    group: tomss
    mode: '0644'
  when: "'OFAC' in file"

# ---------- BEGIN: FOF DIR BACKUP & CREATION FOR OFAC PACKAGE ----------

- name: Find all FOF-* directories
  find:
    paths: "{{ filter_dir }}"
    patterns: "FOF-*"
    file_type: directory
    use_regex: false
  register: fof_dirs
  when: "'FOF64' in file"

- name: Set deploy_date
  set_fact:
    deploy_date: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
  when: "'FOF64' in file"

- name: Backup FOF directories matching version pattern
  shell: mv "{{ item.path }}" "{{ item.path }}.{{ deploy_date }}"
  loop: >-
    {{
      fof_dirs.files
      | selectattr('path', 'search', 'FOF-(NTB|SFX|MCDD)-[0-9]+-[0-9]+-[0-9]+$')
      | list
    }}
  args:
    executable: /bin/bash
  when: "'FOF64' in file"

- name: Create new FOF directories withew version
  file:
    path: "{{ filter_dir }}/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "FOF-NTB-{{ fof64_version }}"
    - "FOF-SFX-{{ fof64_version }}"
    - "FOF-MCDD-{{ fof64_version }}"
  when: "'FOF64' in file"

- name: Extract tar content inside each new FOF directory
  unarchive:
    src: "{{ tmpdir }}/{{ file }}"
    dest: "{{ filter_dir }}/{{ item }}"
    remote_src: yes
  loop:
    - "FOF-NTB-{{ fof64_version }}"
    - "FOF-SFX-{{ fof64_version }}"
    - "FOF-MCDD-{{ fof64_version }}"
  when: "'FOF64' in file"

- name: Remove old FOF entries from bash profile
  lineinfile:
    path: /home/toms/.bash_profile
    regexp: '^export FOF_(NTB|SFX|MCDD|CTL_NTB|CTL_SFX|CTL_MCDD)='
    state: absent
    backup: yes
    owner: toms
    group: toms
    mode: '0644'
  when: "'FOF64' in file"

- name: Update .bash_profile for new FOF variables
  lineinfile:
    path: /home/tomss/.bash_profile
    line: "{{ item }}"
    state: present
    insertafter: EOF
    owner: tomss
    group: tomss
    mode: '0644'
  loop:
    - "export FOF_NTB=$PSK/FOF-NTB-{{ fof64_version }}"
    - "export FOF_SFX=$PSK/FOF-SFX-{{ fof64_version }}"
    - "export FOF_MCDD=$PSK/FOF-MCDD-{{ fof64_version }}"
    - "export FOF_CTL_NTB=$PSK/FOF-NTB-{{ fof64_version }}"
    - "export FOF_CTL_SFX=$PSK/FOF-SFX-{{ fof64_version }}"
    - "export FOF_CTL_MCDD=$PSK/FOF-MCDD-{{ fof64_version }}"
  when: "'FOF64' in file"

# ---------- END: FOF DIR BACKUP & CREATION FOR OFAC PACKAGE ----------

# --------- FFFBIN LOGIC (for OFAC) ---------



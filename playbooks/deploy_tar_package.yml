- name: Extract version from filename
  set_fact:
    this_version: "{{ (file | regex_search('([0-9]+(?:\\.[0-9]+)+)')) }}"

- name: Set destination path
  set_fact:
    dest_path: >-
      {% if 'frontend' in file %}/opt/myapp/versions/{{ this_version | replace('.', '') }}{% elif 'backend' in file %}/opt/myapp/configs/{{ this_version | replace('.', '') }}{% else %}/tmp/unknown{% endif %}

- name: Show dest_path being created
  debug:
    msg: "dest_path is: '{{ dest_path }}'"

- name: Show extracted version
  debug:
    msg: "file={{ file }}, this_version={{ (file | regex_search('([0-9]+(?:\\.[0-9]+)+)')) }}"


- name: Show dest_path being created
  debug:
    msg: "dest_path is: {{ dest_path }}"

- name: Ensure version directory exists
  file:
    path: "{{ dest_path }}"
    state: directory
    mode: '0755'

- name: List /opt/myapp/versions
  shell: ls -l /opt/myapp/versions
  register: list_versions

- debug:
    var: list_versions.stdout_lines

- name: Download package from Nexus
  get_url:
    url: "{{ nexus_path }}{{ file }}"
    dest: "/tmp/{{ file }}"
    mode: '0644'
    force: yes
    url_username: "{{ nexus_username }}"
    url_password: "{{ nexus_password }}"
    validate_certs: no

- name: Extract the tar.gz package
  unarchive:
    src: "/tmp/{{ file }}"
    dest: "{{ dest_path }}"
    remote_src: yes

- name: Print deployment info
  debug:
    msg: "Deployed {{ file }} to {{ dest_path }}"

# Assume this_version already set
- name: Capture previous FFFBST version (commented or not, excluding current)
  shell: |
    grep '^#\?export FFFBST=\$GHK/fffbst-' /home/tomss/.bash_profile | awk -F'-' '{print $2}' | grep -v '{{ this_version | replace(".", "") }}' | tail -n 1
  register: prev_version_raw
  changed_when: false
  failed_when: false
  when: "'frontend' in file"

- name: Set prev_version fact (may be empty)
  set_fact:
    prev_version: "{{ prev_version_raw.stdout }}"
  when: "'frontend' in file"

# 2. Remove all lines for FFFBST
- name: Remove all FFFBST export lines (commented and uncommented)
  lineinfile:
    path: /home/tomss/.bash_profile
    regexp: '^#?export FFFBST=.*'
    state: absent
    backup: yes
    owner: tomss
    group: tomss
    mode: '0644'
  when: "'frontend' in file"

# 3. Add previous version as commented (if exists and different from current)
- name: Add previous FFFBST as commented line (if found and not current version)
  lineinfile:
    path: /home/tomss/.bash_profile
    line: "#export FFFBST=$GHK/fffbst-{{ prev_version }}"
    insertafter: EOF
    state: present
    owner: tomss
    group: tomss
    mode: '0644'
  when: >
    'frontend' in file
    and prev_version is defined
    and prev_version != (this_version | replace('.', ''))
    and prev_version | length > 0

# 4. Add current version as active line
- name: Add current FFFBST export line
  lineinfile:
    path: /home/tomss/.bash_profile
    line: "export FFFBST=$GHK/fffbst-{{ this_version | replace('.', '') }}"
    insertafter: EOF
    state: present
    owner: tomss
    group: tomss
    mode: '0644'
  when: "'frontend' in file"



- name: Extract version and set destination path
  set_fact:
    this_version: "{{ (file | regex_search('([0-9]+(?:\\.[0-9]+)+)')) }}"
    dest_path: >-
      {% if 'frontend' in file %}/opt/myapp/versions/{{ this_version }}
      {% elif 'backend' in file %}/etc/myapp/configs/{{ this_version }}
      {% else %}/tmp/unknown{% endif %}

- name: Show extracted version
  debug:
    msg: "file={{ file }}, this_version={{ (file | regex_search('([0-9]+(?:\\.[0-9]+)+)')) }}"


- name: Show dest_path being created
  debug:
    msg: "dest_path is: {{ dest_path }}"

- name: Ensure version directory exists
  file:
    path: "{{ dest_path }}"
    state: directory
    mode: '0755'

- name: List /opt/myapp/versions
  shell: ls -l /opt/myapp/versions
  register: list_versions

- debug:
    var: list_versions.stdout_lines

- name: Download package from Nexus
  get_url:
    url: "{{ nexus_path }}/{{ file }}"
    dest: "/tmp/{{ file }}"
    mode: '0644'
    force: yes
    url_username: "{{ nexus_username }}"
    url_password: "{{ nexus_password }}"
    validate_certs: no

- name: Extract the tar.gz package
  unarchive:
    src: "/tmp/{{ file }}"
    dest: "{{ dest_path }}"
    remote_src: yes

- name: Print deployment info
  debug:
    msg: "Deployed {{ file }} to {{ dest_path }}"

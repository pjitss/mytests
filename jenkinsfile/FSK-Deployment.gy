properties([
    parameters([
        string(defaultValue: 'nexus', name: 'COMP'),
        string(defaultValue: '', name: 'FILENAMES'),
        string(defaultValue: 'PR', name: 'ENVTYPE'),
        string(defaultValue: 'jits', name: 'branch'),
        string(defaultValue: '', name: 'TASK'),
        string(defaultValue: '', name: 'OFAC_VERS'),
        string(defaultValue: '', name: 'FOF64_VERS'),
        string(defaultValue: '', name: 'VARNAMES'),
        string(defaultValue: '', name: 'VARVALUES')
    ])
])

node {
    cleanWs()

    stage('git repo checkout') {
        git branch: 'jits', url: 'git@github.com:pjitss/mytests.git'
    }

    def files = FILENAMES.split(",")

    if (TASK in ['Nexus-Upload', 'Nexus-Download']) {
    for (file in files) {
        stage("Run Nexus Job") {
            ansiblePlaybook(
                playbook: "role/FSK-Deployment/Nexus-Tasks.pb",
                extras: "-i inventories/${ENVTYPE}/myapps.ini -e ENVNAME=${ENVTYPE} -e COMP=${COMP} -e file_name=${file.trim()} -e task=${TASK}"
            )
        }
    }
    } else if (TASK == 'deploy') {
        for (file in files) {
            stage("Deploy ${file.trim()}") {
                ansiblePlaybook(
                    playbook: "role/FSK-Deployment/Package-Deploy.pb",
                    extras: "-vv -i inventories/${ENVTYPE}/myapps.ini -e ENVNAME=${ENVTYPE} -e COMP=${COMP} -e file_name=${file.trim()} -e ofac_version=${OFAC_VERS} -e fof64_version=${FOF64_VERS} -e task=deploy"
                )
            }
        }
    } else if (TASK == 'frontend') {
        for (file in files) {
            stage("Frontend Package Deployment") {
                ansiblePlaybook(
                    playbook: "role/FSK-Deployment/Frontend-Deploy.pb",
                    extras: "-vv -i inventories/${ENVTYPE}/myapps.ini -e ENVNAME=${ENVTYPE} -e COMP=${COMP} -e file_name=${FILENAMES} -e task=frontend"
                )
            }
        } 
    } else if (TASK == 'dba') {
        stage("Run all DBA SQL scripts") {
            ansiblePlaybook(
                playbook: "role/FSK-Deployment/DB-Deploy.pb",
                extras: "-i inventories/${ENVTYPE}/myapps.ini -e ENVNAME=${ENVTYPE} -e COMP=${COMP} -e file_names='${FILENAMES}' -e var_names='${VARNAMES}' -e var_values='${VARVALUES}' -e task=dba"
            )
        }
    } else {
        error("Unknown TASK: ${TASK}. Valid values: upload, deploy")
    }
}
